@page "/manage-tasks"
@inject HttpClient http
@using Domain.ViewModel
@using WebClient.Abstractions
@using WebClient.Shared.Models
@using WebClient.Components
@using WebClient.Shared.Components
@inject IMemberDataService memberService;
@inject ITaskDataService taskDataService;
@inherits ManageTaskBase
@using Domain.ViewModel


@if (isLoaded)
{
	<div class="page-wrapper row m-0 col-12 p-0">
		<div class="col-4 p-0">
			<LeftMenu />
		</div>
		<div class="col-8 p-0">
			@if (showLister)
			{
				<EditForm Model=@task OnValidSubmit="OnAddItem">
					<DataAnnotationsValidator />
					<div class="col-10 offset-1 pt-5">
						<div class="row m-0">
							<Field class="col-9 p-0 custom-input">
								<InputText @bind-Value=task.Subject class="form-control" id="Subject" />
								<ValidationMessage For="() => task.Subject" />
							</Field>
							<div class="col-3 p-0 text-right">
								<input type="submit" class="add-btn px-4" value="Add" />
							</div>
						</div>
					</div>
				</EditForm>

				<div class="col-10 offset-1">
					<TaskListerComponent />
				</div>
			}
			@if (false)
			{
				<div class="col-10 offset-1 pt-5">
				</div>
			}
		</div>
	</div>
}

@code {
	TaskVm task = new TaskVm();
	public List<MemberVm> members;
	public string newTask;


	private bool isLoaded;
	private bool showLister;

	protected override Task OnInitializedAsync()
	{
		showLister = true;
		isLoaded = true;
		return base.OnInitializedAsync();
	}




	private void OnAddItem()
	{
		var taskModel = new TaskVm()
		{
			Id = Guid.NewGuid(),
			IsComplete = false,
			Subject = task.Subject
		};

		task.Subject = string.Empty;

		if (memberService.SelectedMember != null)
		{
			taskModel.AssignedMemberId = memberService.SelectedMember.Id;
		}
		taskDataService.AddTask(taskModel);
		StateHasChanged();
	}

}